#+STARTUP: showall
#+PROPERTY: header-args :results silent

*Update* <2019-10-02 星期三>

* Emacs
[[https://github.com/zsxh/emacs.d][My Emacs Config]]

* Env 环境变量
  Install =zsh=, =prezto= first, then
  #+BEGIN_SRC shell
    ln -s `pwd`/env/.myzshenv ~/
    ln -s `pwd`/env/.zpreztorc ~/
    echo "source \"${HOME}/.myzshenv\"" >> ~/.zshenv
  #+END_SRC

* Xmodmap 键位映射
  #+BEGIN_SRC shell
    ln -s `pwd`/.Xmodmap ~/
  #+END_SRC

  - Not Working
    - [[https://www.reddit.com/r/archlinux/comments/abfuov/xmodmap_and_xkbset_settings_are_reset_to_default/][xmodmap and xkbset settings are reset to default after system goes to sleep/standby]]
    - [[https://wiki.archlinux.org/index.php/Deepin_Desktop_Environment_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4][故障排除-从待机状态恢复后]]
    - [[https://superuser.com/questions/393423/the-symbol-and-systemctl-and-vsftpd][The @ symbol and systemctl and vsftpd]]

* Firefox Layout
  copy ./firefox/chrome directory into ~/.mozilla/firefox/${some-hash-code}.dev-edition-default/

* Terminal
** Alacritty
  Install =alacritty= fisrt
  #+begin_src shell
    ln -s `pwd`/terminal/alacritty.yml ~/.config/alacritty/
  #+end_src
** Tmux
  #+begin_src shell
    ln -s `pwd`/terminal/.tmux.conf ~/
  #+end_src
** Truecolor and Italic support
   https://github.com/syl20bnr/spacemacs/wiki/Terminal
  #+begin_src shell
    tic -x -o ~/.terminfo `pwd`/terminal/xterm-24bit.terminfo
  #+end_src

* Vim
  #+BEGIN_SRC shell
    ln -s `pwd`/.vimrc ~/
  #+END_SRC sh

* Inputrc
  #+BEGIN_SRC shell
    ln -s `pwd`/.inputrc ~/
  #+END_SRC

* Docker
  #+BEGIN_SRC shell
    sudo ln -s `pwd`/docker/override.conf /etc/systemd/system/docker.service.d/
  #+END_SRC

* Rime
  #+BEGIN_SRC shell
    ln -s `pwd`/rime/default.yaml ~/.config/ibus/rime/build/
    ln -s `pwd`/rime/luna_pinyin_simp.schema.yaml ~/.config/ibus/rime/build/
  #+END_SRC

* Polybar
  https://github.com/polybar/polybar
  #+begin_src shell
    ln -s `pwd`/polybar ~/.config/
    ln -s `pwd`/polybar/polybar.desktop ~/.config/autostart
  #+end_src

* Albert
  Install [[https://github.com/albertlauncher/albert][Albert]] first, then install extensions
  #+begin_src shell
    git clone https://github.com/albertlauncher/python.git ~/.local/share/albert/org.albert.extension.python/modules
  #+end_src

* BEGIN
** dotfiles
  #+begin_src shell
    # flake8 忽略缩进警告，调整每行默认长度
    # pycodestyle 忽略缩进警告，调整每行默认长度
    ln -s `pwd`/python/pip/pip.conf ~/.pip/
    ln -s `pwd`/python/.condarc ~/
    ln -s `pwd`/python/flake8 ~/.config
    ln -s `pwd`/python/pycodestyle ~/.config
  #+end_src
** pyenv
    Install https://github.com/pyenv/pyenv
    #+begin_src shell
      pyenv install miniconda3-latest
      pyenv global miniconda3-latest
      # https://stackoverflow.com/questions/58044214/installing-anaconda-with-pyenv-unable-to-configure-virtual-environment
      # disable init of env "base"
      conda config --set auto_activate_base false
      conda update --all
      conda install python=version
    #+end_src
** virtual environment examples
*** venv (deployment projects)
    https://docs.python.org/3/tutorial/venv.html
    #+begin_src shell
      # dir path ./venv is for emacs lsp-python-ms server
      python -m venv ./venv
      source venv/bin/activate
      deactivate
      pip freeze > requirements.txt
      pip install -f requirements.txt
    #+end_src
*** conda virtual environment (machine-learning researches)
    https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#
    #+begin_src shell
      conda create --name(-n) machine-learning python=3.8
      conda env export > environment.yml
      conda env create -f environment.yml
      conda activate machine-learning

      # specifying a location for an environment
      conda create --prefix ./envs jupyterlab
      conda activate ./envs
      conda deactivate
    #+end_src

* Rustfmt
  #+begin_src shell
    ln -s `pwd`/rustfmt ~/.config
  #+end_src

* Proxy

* 显卡
https://github.com/vetzki/nvidia-prime-switch-lightdm
https://github.com/zsxh/nvidia-prime-switch-lightdm
https://github.com/Askannz/optimus-manager

* Tips
** A stop job is running for session c2 of user ...
   #+begin_src shell
     sudo systemctl edit systemd-timesyncd.service
   #+end_src

   #+begin_example
     [Service]
     TimeoutStopSec=1s
   #+end_example
   save as "systemd-timesyncd.service.d/override.conf" file 
   https://www.reddit.com/r/archlinux/comments/4bawf7/a_stop_job_is_running_for_session_c2_of_user/
