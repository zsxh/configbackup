export EDITOR='vim'
export VISUAL='vim'

export JAVA_HOME=/usr/local/jdk
export MAVEN_HOME=/usr/local/maven

export PYENV_ROOT=$HOME/.pyenv
export PYTHONUSERBASE=$HOME/.local
export GIT_INTERNAL_GETTEXT_TEST_FALLBACKS=1 # https://github.com/pyenv/pyenv/issues/688#issuecomment-245294312

export NVM_DIR=$HOME/.nvm

export CUDA_PATH=/opt/cuda
export LD_LIBRARY_PATH=/usr/lib/openssl-1.0:$CUDA_PATH/lib64:$CUDA_PATH/extras/CUPTI/lib64

export JULIA_HOME=/usr/local/julia
# export NODEJS_HOME=/usr/local/nodejs
export GO_HOME=/usr/local/go
export RUST_HOME=$HOME/.cargo

export PATH=$PYENV_ROOT/bin:$PYTHONUSERBASE/bin:$RUST_HOME/bin:$JAVA_HOME/bin:$MAVEN_HOME/bin:$CUDA_PATH:$CUDA_PATH/bin:$LD_LIBRARY_PATH:$JULIA_HOME/bin:$NODEJS_HOME/bin:$GO_HOME/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl

export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8

export GTK_IM_MODULE=ibus
export QT_IM_MODULE=ibus
export XMODIFIERS=@im=ibus

export TERM=xterm-256color

export XDG_CONFIG_HOME=$HOME/.config
export XDG_CACHE_HOME=$HOME/.cache
export XDG_DATA_HOME=$HOME/.local/share

# 放在最后防止环境变量改变引起其他问题
# TODO: 放弃pyenv,拖慢zsh启动速度
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init - --no-rehash)"
fi

# 造成zsh启动太慢了
# if command -v pipenv 1>/dev/null 2>&1; then
#   eval "$(pipenv --completion)"
# fi

# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Node Version Manager
# https://github.com/nvm-sh/nvm/issues/1277#issuecomment-470490227
# The only inconvenience for me is the need to run node, nvm, or npm before any global package (the ones installed with npm install -g <package>), otherwise the command is not recognized.
nvm_load () {
    . $NVM_DIR/nvm.sh
    . $NVM_DIR/bash_completion
}
alias node='unalias nvm; unalias node; unalias npm; nvm_load; node $@'
alias npm='unalias nvm; unalias node; unalias npm; nvm_load; npm $@'
alias nvm='unalias nvm; unalias node; unalias npm; nvm_load; nvm $@'

# 触摸板双指水平滑动
eval "$(gsettings set com.deepin.dde.touchpad horiz-scroll-enabled true)"

# TLDR settings
export TLDR_CACHE_ENABLED=1
export TLDR_CACHE_MAX_AGE=720 # hours

# ls -l 用长时间代替短时间格式
export TIME_STYLE=long-iso

# TMUX
# https://wiki.archlinux.org/index.php/Tmux#Start_tmux_on_every_shell_login
if which tmux >/dev/null 2>&1; then
    # if ! [ "$(basename "$(cat "/proc/$PPID/comm")")" = "emacs" ]; then
    if [ "$(basename "$(cat "/proc/$PPID/comm")")" = "alacritty" ]; then
        # if no session is started, start a new session
        test -z ${TMUX} && (tmux attach || tmux new-session -c $PWD)

        # when quitting tmux, try to attach
        # while test -z ${TMUX}; do
        #     tmux attach || break
        # done

        # exit() {
        #     if [[ -z $TMUX ]]; then
        #         builtin exit
        #     else
        #         tmux detach
        #     fi
        # }
    fi
fi
