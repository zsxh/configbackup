export EDITOR='vim'
export VISUAL='vim'

export XDG_CONFIG_HOME=$HOME/.config
export XDG_CACHE_HOME=$HOME/.cache
export XDG_DATA_HOME=$HOME/.local/share

export JAVA_HOME=/usr/local/jdk
export MAVEN_HOME=/usr/local/maven
export CLOJURE_TOOL=/usr/local/clojure

export PYENV_ROOT=$HOME/.pyenv
export PYTHONUSERBASE=$HOME/.local
export GIT_INTERNAL_GETTEXT_TEST_FALLBACKS=1 # https://github.com/pyenv/pyenv/issues/688#issuecomment-245294312


export CUDA_PATH=/opt/cuda
export LD_LIBRARY_PATH=/usr/lib/openssl-1.0:$CUDA_PATH/lib64:$CUDA_PATH/extras/CUPTI/lib64

export JULIA_HOME=/usr/local/julia
export NVM_DIR=$HOME/.config/nvm
export GO_HOME=/usr/local/go
export GOPATH=$HOME/Code/workspace/go/gopath
export GO111MODULE=auto
export GOPROXY=https://mirrors.cloud.tencent.com/go/
export RUST_HOME=$HOME/.cargo
export RUBY_HOME=$HOME/.gem/ruby/2.7.0

export PATH=$PYENV_ROOT/bin:$PYTHONUSERBASE/bin:$RUST_HOME/bin:$JULIA_HOME/bin:$GO_HOME/bin:$GOPATH/bin:$JAVA_HOME/bin:$MAVEN_HOME/bin:$CLOJURE_TOOL:$RUBY_HOME/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:$CUDA_PATH:$CUDA_PATH/bin:$LD_LIBRARY_PATH

export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8

export GTK_IM_MODULE=ibus
export QT_IM_MODULE=ibus
export XMODIFIERS=@im=ibus

export TERM=xterm-24bit
# SSH might break if your remote machine does not have the same setup, you can work around this with the following alias.
alias ssh="TERM=xterm-256color ssh"

alias docker="podman"
alias docker-compose="podman-compose"

# 放在最后防止环境变量改变引起其他问题
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init - --no-rehash)"
fi

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/zsxh/.pyenv/versions/miniconda3-latest/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/zsxh/.pyenv/versions/miniconda3-latest/etc/profile.d/conda.sh" ]; then
        . "/home/zsxh/.pyenv/versions/miniconda3-latest/etc/profile.d/conda.sh"
    else
        export PATH="/home/zsxh/.pyenv/versions/miniconda3-latest/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# vterm
# https://github.com/akermu/emacs-libvterm
function vterm_printf(){
    if [ -n "$TMUX" ]; then
        # tell tmux to pass the escape sequences through
        # (Source: http://permalink.gmane.org/gmane.comp.terminal-emulators.tmux.user/1324)
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}

vterm_prompt_end() {
    vterm_printf "51;A$(whoami)@$(hostname):$(pwd)";
}

if [[ "$INSIDE_EMACS" = 'vterm' ]]; then
    alias clear='vterm_printf "51;Evterm-clear-scrollback";tput clear'
fi

# Install zsh-async if it’s not present
if [[ ! -a ~/.zsh-defer ]]; then
    git clone https://github.com/romkatv/zsh-defer.git ~/.zsh-defer
fi
source ~/.zsh-defer/zsh-defer.plugin.zsh

# Node Version Manager
function load_nvm() {
    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
    [ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"
}

# https://github.com/romkatv/zsh-defer#example
# load_nvm immediately when parent process is emacs
if [[ "$(basename "$(cat "/proc/$PPID/comm")")" == emacs* ]]; then
    if [[ "$INSIDE_EMACS" = 'vterm' ]]; then
        zsh-defer load_nvm
    else
        load_nvm
    fi
else
    zsh-defer load_nvm
fi

# Alias
alias mg="mvn archetype:generate"

# libgit2 trailing slash problem & 也不能用大写 HTTP_PROXY, wget 识别不出来
# https://github.com/JuliaLang/julia/issues/33111#issuecomment-541204556
# https://github.com/libgit2/libgit2/issues/5255
alias shttp="export http_proxy=http://127.0.0.1:1081/; export https_proxy=http://127.0.0.1:1081/;"
alias uhttp="unset http_proxy; unset https_proxy;"

# 触摸板双指水平滑动
# gsettings list-keys com.deepin.dde.touchpad
eval "$(gsettings set com.deepin.dde.touchpad horiz-scroll-enabled true)"

# TLDR settings
export TLDR_CACHE_ENABLED=1
export TLDR_CACHE_MAX_AGE=720 # hours

# ls -l 用长时间代替短时间格式
export TIME_STYLE=long-iso

# TMUX
# https://wiki.archlinux.org/index.php/Tmux#Start_tmux_on_every_shell_login
if which tmux >/dev/null 2>&1; then
    # if ! [ "$(basename "$(cat "/proc/$PPID/comm")")" = "emacs" ]; then
    if [ "$(basename "$(cat "/proc/$PPID/comm")")" = "alacritty" ]; then
        # if no session is started, start a new session
        test -z ${TMUX} && (tmux attach || tmux new-session -c $PWD)

        # when quitting tmux, try to attach
        # while test -z ${TMUX}; do
        #     tmux attach || break
        # done

        # exit() {
        #     if [[ -z $TMUX ]]; then
        #         builtin exit
        #     else
        #         tmux detach
        #     fi
        # }
    fi
fi

# https://stackoverflow.com/questions/28491458/zsh-agnoster-theme-showing-machine-name
# hiding user@hostname for agnoster.zsh-theme
DEFAULT_USER="$(whoami)"

# Note: Fixing Emacs tramp mode when using zsh
# https://blog.karssen.org/2016/03/02/fixing-emacs-tramp-mode-when-using-zsh/
# https://www.emacswiki.org/emacs/TrampMode#toc8
# [[ $TERM == "dumb" ]] && unsetopt zle && PS1='$ ' && return

# export http_proxy="http://127.0.0.1:1081"
# export https_proxy=$http_proxy
# # https://docs.oracle.com/javase/7/docs/technotes/guides/net/proxies.html
# export MAVEN_OPTS="-DsocksProxyHost=127.0.0.1 -DsocksProxyPort=1080"
